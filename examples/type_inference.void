// Type Inference Examples for the Void Language
// Using the := operator for automatic type deduction
 
// Basic type inference with literals
const main = fn() {
  // Number inference
  number := 42
  another_number := 17

  // const string
  message := "testing"
    
  // Function pointer inference (and anonymous functions)
  
  adder := fn(x: i32, y: i32) -> i32 do return x + y
  multiplier := fn(a: i32, b: i32) -> i32 {
    result: i32 = a * b
    fmt.println("multiplier: {:d}", result)
    return result
  }

  fmt.println("mult result: {:d}", multiplier(2, 3))

  multiplier = adder
  fmt.println("add result: {:d}", multiplier(2, 3))
}